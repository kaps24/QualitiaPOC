##########  This file contains Firefox browser specific properties information ##########
##########  These properties and their description have been taken from Selenium DesiredCapabilities online documentation and to know more about these properties visithttps://code.google.com/p/selenium/wiki/DesiredCapabilities  ##########
##########  The properties start with "custom_" are Qualitia provided properties not DesiredCapabilities. ##########
##########  To use properties uncomment the property by removing preceding # symbol from property name. Commented properties will be ignored. ##########
##########  Property keys are case-sensitive. It is highly recommended to do not change the case of keys, if changed then those will be ignored. ##########
##########	There is no value validation from Qualitia. It is highly recommended that to set valid values to properties. If any invalid value is set then Qualitia use it as it is and let Selenium decide how to treat with this. ##########

#Property Name: version
#The browser version, or the empty string if unknown. If empty default version will be used.
#e.g. version=40.0.1

#version=

#Property Name: javascriptEnabled
#Whether the session supports executing user supplied JavaScript in the context of the current page (only on HTMLUnitDriver).
#Possible values are: true, false
#e.g. javascriptEnabled=true

#javascriptEnabled=

#Property Name: unexpectedAlertBehaviour
#What the browser should do with an unhandled alert before throwing out the UnhandledAlertException. Possible values are "accept", "dismiss" and "ignore"
#e.g. unexpectedAlertBehaviour=accept

unexpectedAlertBehaviour=ignore

#Property Name: handlesAlerts
#Whether the session can interact with modal popups, such as window.alert and window.confirm.
#Possible values are: true, false
#e.g. handlesAlerts=true

#handlesAlerts=

#Property Name: cssSelectorsEnabled
#Whether the session supports CSS selectors when searching for elements.
#Possible values are: true, false
#e.g.  cssSelectorsEnabled=true

#cssSelectorsEnabled=

#Property Name: databaseEnabled
#Whether the session can interact with database storage.
#Possible values are: true, false
#e.g. databaseEnabled=true

#databaseEnabled=

#Property Name: locationContextEnabled
#Whether the session can set and query the browser's location context.
#Possible values are: true, false
#e.g. locationContextEnabled=true

#locationContextEnabled=

#Property Name: applicationCacheEnabled
#Whether the session can interact with the application cache.
#Possible values are: true, false
#e.g. applicationCacheEnabled=true

#applicationCacheEnabled=

#Property Name: browserConnectionEnabled
#Whether the session can query for the browser's connectivity and disable it if desired.
#Possible values are: true, false
#e.g. browserConnectionEnabled=true

#browserConnectionEnabled=

#Property Name: webStorageEnabled
#Whether the session supports interactions with storage objects.
#Possible values are: true, false
#e.g. webStorageEnabled=true

#webStorageEnabled=

#Property Name: acceptSslCerts
#Whether the session should accept all SSL certs by default.
#Possible values are: true, false
#e.g. acceptSslCerts=true 

#acceptSslCerts=

#Property Name: rotatable
#Whether the session can rotate the current page's current layout between portrait and landscape orientations (only applies to mobile platforms).
#Possible values are: true, false
#e.g. rotatable=true

#rotatable=

#Property Name: nativeEvents
#Whether the session is capable of generating native events when simulating user input.
#Possible values are: true, false
#e.g. nativeEvents=true

#nativeEvents=

#Property Name: elementScrollBehavior
#Allows the user to specify whether elements are scrolled into the viewport for interaction to align with the top (0) or bottom (1) of the viewport. 
#The default value is to align with the top of the viewport.
#e.g. elementScrollBehavior=0

#elementScrollBehavior=

####################################################### Proxy properties starts ########################################################
#Property Name: custom_use_proxy
#If set true custom_use_proxy property settings will be used, else ignored
#e.g. custom_use_proxy=true

#custom_use_proxy=false

#Property Name: proxyType
#(Required) The type of proxy being used. Possible values are: 
#direct - A direct connection - no proxy in use, 
#manual - Manual proxy settings configured, e.g. setting a proxy for HTTP, a proxy for FTP, etc, 
#pac - Proxy autoconfiguration from a URL, 
#autodetect - Proxy autodetection, probably with WPAD, 
#system - Use system settings
#e.g. proxyType=manual

#proxyType=

#Property Name: proxyAutoconfigUrl
#(Required if proxyType == pac, Ignored otherwise) Specifies the URL to be used for proxy autoconfiguration.
#e.g. proxyAutoconfigUrl=

#proxyAutoconfigUrl=

#Property Name: custom_proxy_address
#(Optional, Ignored if proxyType != manual) Specifies the proxies to be used for FTP, HTTP, HTTPS and SOCKS requests respectively.
#Behaviour is undefined if a request is made, where the proxy for the #particular protocol is undefined, if proxyType is manual. 
#Expected format example: hostname.com:1234 
#e.g. custom_proxy_address=10.10.1.3:8080

#custom_proxy_address=

#Property Name: socksUsername
#(Optional, Ignored if proxyType != manual and socksProxy is not set) Specifies SOCKS proxy username.
#e.g. socksUsername=

#socksUsername=

#Property Name: socksPassword
#(Optional, Ignored if proxyType != manual and socksProxy is not set) Specifies SOCKS proxy password.
#e.g. socksPassword=

#socksPassword=

#Property Name: noProxy
#(Optional, Ignored if proxyType != manual and socksProxy is not set) Specifies SOCKS proxy password.
#e.g. noProxy=

#noProxy=

####################################################### Proxy properties ends ##########################################################

#Property Name: firefox_binary
#Path to firefox binary file to use.

#firefox_binary=

################################################# Firefox profile properties starts #################################################

#Property Name: use_firefox_profile
#If set true firefox profile specific properties will be used, else ignored
#e.g. use_firefox_profile=true

#custom_use_firefox_profile=false

#Property Name: webdriver_accept_untrusted_certs
#Whether to trust all SSL certificates. It is used for Firefox profile.
#e.g. webdriver_accept_untrusted_certs=true

#webdriver_accept_untrusted_certs=

#Property Name: webdriver_assume_untrusted_issuer
#Whether to trust all SSL certificate issuers. It is used for Firefox profile.
#e.g. webdriver_assume_untrusted_issuer=true

#webdriver_assume_untrusted_issuer=

#Property Name: webdriver.log.driver
#Level at which to log FirefoxDriver logging statements to a temporary file, so that they can be retrieved by a getLogs command. 
#Available options; DEBUG, INFO, WARNING, ERROR, OFF. Defaults to OFF. It is used for Firefox profile.
#e.g. webdriver.log.driver=ERROR

#webdriver.log.driver=OFF

#Property Name: webdriver.log.file
#Path to file to which to copy firefoxdriver logging output. Defaults to no file (like /dev/null). It is used for Firefox profile.
#e.g. 

#webdriver.log.file=

#Property Name: webdriver.load.strategy
#Experimental API. Defines different strategies for how long to wait until a page is loaded. Values: unstable, conservative. Defaults to conservative.
#It is used for Firefox profile.
#e.g. webdriver.load.strategy=unstable

#webdriver.load.strategy=conservative

#Property Name: webdriver_firefox_port
#Port to listen on for WebDriver commands. Defaults to 7055. It is used for Firefox profile.
#e.g. 

#webdriver_firefox_port=

################################################# Firefox profile properties ends #################################################

################################################# LoggingPreferences properties starts #################################################
#Property Name: custom_use_loggingpreferences
#If set true LoggingPreferences property settings will be used, else ignored
#e.g. custom_use_loggingpreferences=true

#custom_use_loggingpreferences=false

#Property Name: logtype_browser_level
#Describing the logging level. Available values for most loggers are "OFF", "SEVERE", "WARNING", "INFO", "CONFIG", "FINE", "FINER", "FINEST", "ALL".
#e.g. logtype_browser_level=ALL

#logtype_browser_level=OFF

#Property Name: logtype_client_level
#Describing the logging level. Available values for most loggers are "OFF", "SEVERE", "WARNING", "INFO", "CONFIG", "FINE", "FINER", "FINEST", "ALL".
#e.g. logtype_client_level=ALL

#logtype_client_level=OFF

#Property Name: logtype_driver_level
#Describing the logging level. Available values for most loggers are "OFF", "SEVERE", "WARNING", "INFO", "CONFIG", "FINE", "FINER", "FINEST", "ALL".
#e.g. logtype_driver_level=ALL

#logtype_driver_level=OFF

#Property Name: logtype_performance_level
#Describing the logging level. Available values for most loggers are "OFF", "SEVERE", "WARNING", "INFO", "CONFIG", "FINE", "FINER", "FINEST", "ALL".
#e.g. logtype_performance_level=ALL

#logtype_performance_level=OFF

#Property Name: logtype_profiler_level
#Describing the logging level. Available values for most loggers are "OFF", "SEVERE", "WARNING", "INFO", "CONFIG", "FINE", "FINER", "FINEST", "ALL".
#e.g. logtype_profiler_level=ALL

#logtype_profiler_level=OFF

#Property Name: logtype_server_level
#Describing the logging level. Available values for most loggers are "OFF", "SEVERE", "WARNING", "INFO", "CONFIG", "FINE", "FINER", "FINEST", "ALL".
#e.g. logtype_server_level=ALL

#logtype_server_level=OFF

################################################# LoggingPreferences properties ends #################################################